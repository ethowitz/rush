exp           := literal
               | (+ exp exp)
               | (- exp exp)
               | (* exp exp)
               | (/ exp exp)
               | (% exp exp)
               | (^ exp exp)
               | (or exp exp)
               | (and exp exp)
               | (if exp exp exp)
               | :\variable-name
def           := (let \variable-name exp)
literal       := SYM | NUM | BOOL
variable-name := :^[a-z_]\\w*$
SYM           := "^[\w\-. ]+$"
NUM           := sequence of digits 0-9 (signed)
BOOL          := true | false
