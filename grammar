command       ::= name (arg_name | [exp])* (; command)
exp           ::= literal
                | "if" exp "then" exp "else" exp
                | :variable-name
                | equality
                | exp (; exp)*
equality      ::= compare ( ( "!=" | "==" ) compare )*
compare       ::= boolop ( (">=" | "<=" | "<" | ">") boolop )*
boolop        ::= term ( ("and" | "or" | "&&" | "or") term)*
term          ::= factor ( ( "-" | "+" ) factor )*
factor        ::= unary ( ( "/" | "*" | "%" ) unary)*
unary         ::= ( "!" | "-" ) unary
                | primary
primary       ::= NUM | SYM | BOOL | "nil"
                | "(" expression ")"
def           ::= "let" variable-name exp
literal       ::= SYM | NUM | BOOL
variable-name ::= :^[a-z_]\\w*$
SYM           ::= "^[\w\-. ]+$"
NUM           ::= 0-9 | 0-9 followed by NUM (signed)
BOOL          ::= true | false
